services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bugninja-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: bugninja
      POSTGRES_USER: bugninja_user
      POSTGRES_PASSWORD: bugninja_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bugninja_user -d bugninja"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for queuing and real-time communication
  redis:
    image: redis:7-alpine
    container_name: bugninja-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./infrastructure/docker/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: infrastructure/docker/backend.Dockerfile
      secrets:
        - GIT_TOKEN
    container_name: bugninja-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      # Only mount specific directories for development, not the entire backend
      - ./backend/app:/app/app
      - ./backend/dev:/app/dev
      - ./backend/content:/app/content:rw
      - ./backend/screenshots:/app/screenshots:rw
    environment:
      - DATABASE_URL=postgresql+psycopg2://bugninja_user:bugninja_password@postgres:5432/bugninja
      - REDIS_URL=redis://redis:6379
      - API_DEBUG=true
      - API_CORS_ORIGINS=["http://localhost:3000"]
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_KEY=${AZURE_OPENAI_KEY}
    command: >
      sh -c "
        mkdir -p /app/content/run_gifs /app/content/run_he_screenshots /app/content/screenshots
      "
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    secrets:
      - GIT_TOKEN
      - AZURE_OPENAI_ENDPOINT
      - AZURE_OPENAI_KEY

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: ../infrastructure/docker/frontend.Dockerfile
    container_name: bugninja-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      # Mount node_modules from host to avoid linter issues
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - backend
    stdin_open: true
    tty: true

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: bugninja-network

secrets:
  GIT_TOKEN:
    file: ./infrastructure/secrets/GIT_TOKEN
  AZURE_OPENAI_ENDPOINT:
    file: ./infrastructure/secrets/AZURE_OPENAI_ENDPOINT
  AZURE_OPENAI_KEY:
    file: ./infrastructure/secrets/AZURE_OPENAI_KEY