[project]
name = "bugninja-backend"
version = "0.1.0"
description = "Bugninja Platform Backend API"
authors = [
    {name = "Bugninja Team"}
]
dependencies = [
    "alembic==1.16.4",
    "browser-use[memory]==0.2.5",
    "celery[redis]==5.5.3",
    "cssselect==1.3.0",
    "cuid2==2.0.1",
    "faker==37.4.0",
    "fastapi==0.115.13",
    "hypercorn>=0.17.3",
    "isort==6.0.1",
    "lxml==5.4.0",
    "openai==1.84.0",
    "polyfactory>=2.22.0",
    "pydantic==2.10.6",
    "pydantic-settings==2.10.1",
    "python-dotenv==1.1.0",
    "rich==14.0.0",
    "ruff==0.11.13",
    "sqlalchemy==2.0.41",
    "types-lxml==2025.3.30",
    "uvloop>=0.21.0",
]
requires-python = ">= 3.11"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.uv]
dev-dependencies = [
    "pytest==8.4.1",
    "pytest-asyncio==1.0.0",
    "black==25.1.0",
    "isort==6.0.1",
    "mypy==1.16.0",
]

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"] # ignore unused imports in __init__.py files
"test_*.py" = ["F401", "F403", "F811"]  # ignore unused imports in test files as well

[tool.black]
line-length = 100
target-version = ["py313"]

[tool.isort]
profile = "black"
extend_skip = ["__init__.py"]

[tool.mypy]
python_version = "3.13"
strict = true
check_untyped_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true


[tool.poe.tasks]

[tool.poe.tasks.test]
help   = "Run tests on the project"
shell = "uv run pytest tests"

[tool.poe.tasks.lint]
help   = "Lints the whole project searching for inefficiencies in the code"
shell = "uv run ruff check --fix . && uv run isort . && uv run black . && uv run mypy app"
